% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create-column.R
\name{create-column}
\alias{create-column}
\alias{create_column_ui}
\alias{create_column_server}
\title{Create new column}
\usage{
create_column_ui(id)

create_column_server(id, data_r = reactive(NULL))
}
\arguments{
\item{id}{Module's ID.}

\item{data_r}{A \code{\link[shiny:reactive]{shiny::reactive()}} function returning a \code{data.frame}.}
}
\value{
A \code{\link[shiny:reactive]{shiny::reactive()}} function returning the data.
}
\description{
This module allow to enter an expression to create a new column in \code{data.frame}.
}
\note{
User can only use a subset of function: (, +, -, *, ^, \%\%, \%/\%, /, ==, >, <, !=, <=, >=, &, |, abs, sign, sqrt, ceiling, floor, trunc, cummax, cummin, cumprod, cumsum, exp, expm1, log, log10, log2, log1p, cos, cosh, sin, sinh, tan, tanh, acos, acosh, asin, asinh, atan, atanh, cospi, sinpi, tanpi, gamma, lgamma, digamma, trigamma, round, signif, max, min, range, prod, sum, any, all, pmin, pmax, mean, paste, paste0, substr, nchar, trimws, gsub, sub, grepl, ifelse.
}
\examples{

library(shiny)
library(datamods)
library(reactable)

ui <- fluidPage(
  theme = bslib::bs_theme(version = 5L, preset = "bootstrap"),
  tags$h2("Create new column"),
  fluidRow(
    column(
      width = 4,
      create_column_ui("col")
    ),
    column(
      width = 8,
      reactableOutput(outputId = "table")
    )
  )
)

server <- function(input, output, session) {

  data_r <- create_column_server(
    id = "col",
    data_r = reactive(mtcars[, 1:5])
  )

  output$table <- renderReactable({
    data <- req(data_r())
    reactable(
      data = data,
      bordered = TRUE,
      compact = TRUE,
      striped = TRUE
    )
  })
}

if (interactive())
  shinyApp(ui, server)
}
